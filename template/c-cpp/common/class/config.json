{
	"suffix": "cpp",
	"weight": 100,
	"targets": [
		{
			"filepath": "{{ path.resolve(customize['fullHeaderPath'], inputs.className + '.h') }}",
			"tplpath": "header.tpl"
		},
		{
			"filepath": "{{ path.resolve(customize['fullCppPath'], inputs.className + '.cpp') }}",
			"tplpath": "cpp.tpl"
		}
	],
	"inputs": [
		{
			"type": "path",
			"name": "cppPath",
			"after": "{{customize['fullCppPath'] = path.resolve(projectFolder, inputs.cppPath)}}",
			"checkRules": "{{[checkRules.activeDirectoryRuleFunction(projectFolder)]}}",
			"value": "{{helper.activeDirectoryRelativeBasePath(projectFolder)}}",
			"suggest": {
				"value": "{{helper.flatAndFilterSuggestPath(projectFolder, 'src', 'source', 'sources')}}"
			}
		},
		{
			"type": "path",
			"name": "headerPath",
			"after": "{{customize['fullHeaderPath'] = path.resolve(projectFolder, projectFolder, inputs.headerPath)}}",
			"checkRules": "{{[checkRules.activeDirectoryRuleFunction(projectFolder)]}}",
			"value": "{{helper.activeDirectoryRelativeBasePath(projectFolder) }}",
			"suggest": {
				"value": "{{helper.flatAndFilterSuggestPath(projectFolder, 'include', 'includes', 'src', 'source', 'sources')}}"
			}
		},
		{
			"type": "text",
			"name": "className",
			"checkRules": "{{[checkRules.notEmpty, checkRules.commonIdentifier, checkRules.uppercaseFirst]}}",
			"suggest": {
				"selected": true,
				"value": "Main"
			}
		}
	]
}